<launch>

  <!-- Obstacle positions -->
  <arg name="SG_x" default="-12"/>
  <arg name="SG_y" default="26"/>
  <arg name="SG_z" default="-1"/>
  <arg name="SG_yaw" default="-1.28"/>

  <arg name="PM1_x" default="18.8"/>
  <arg name="PM1_y" default="22.3"/>
  <arg name="PM1_z" default="-4.55"/>
  <arg name="PM1_yaw" default="2.2"/>

  <arg name="PM2_x" default="28.8"/>
  <arg name="PM2_y" default="14.5"/>
  <arg name="PM2_z" default="-4.55"/>
  <arg name="PM2_yaw" default="5.2"/>

  <!-- Start the a underwater world simulation scenario -->
  <include file="$(find robosub_descriptions)/launch/TRANSDEC.launch"/>

  <include file="$(find robosub_descriptions)/launch/upload.launch">
      <arg name="obstacle" default="StartGate"/>
      <arg name="x" default="$(arg SG_x)"/>
      <arg name="y" default="$(arg SG_y)"/>
      <arg name="z" default="$(arg SG_z)"/>
      <arg name="yaw" default="$(arg SG_yaw)"/>
  </include>

  <!-- <include file="$(find robosub_descriptions)/launch/upload.launch">
      <arg name="obstacle" default="PathMarker"/>
      <arg name="x" default="$(arg PM1_x)"/>
      <arg name="y" default="$(arg PM1_y)"/>
      <arg name="z" default="$(arg PM1_z)"/>
      <arg name="yaw" default="$(arg PM1_yaw)"/>
  </include>

  <include file="$(find robosub_descriptions)/launch/upload.launch">
      <arg name="obstacle" default="PathMarker"/>
      <arg name="postfix" default="_2"/>
      <arg name="x" default="$(arg PM2_x)"/>
      <arg name="y" default="$(arg PM2_y)"/>
      <arg name="z" default="$(arg PM2_z)"/>
      <arg name="yaw" default="$(arg PM2_yaw)"/>
  </include> -->


  <!-- TODO Figure out how to make these dynamicly update from Gazebo simulatino data
            This will probably be replaced with RobotDescriptions for non static items
       TODO Figure out a way to share this data into TRANSDEC launch so we can move these
            TRANSDEC model parameters there
          -->
  <node name="publish_world_models"
        pkg="uuv_assistants"
        type="publish_world_models.py"
        output="screen">
        <rosparam subst_value="true">
            meshes:
              StartGate_1:
                mesh: package://robosub_descriptions/models/StartGate/StartGate.dae
                pose:
                  position: [$(arg SG_x), $(arg SG_y), $(arg SG_z)]
                  orientation: [0, 0, $(arg SG_yaw)]
              <!-- PathMarker_1:
                mesh: package://robosub_descriptions/models/PathMarker/PathMarker.dae
                pose:
                  position: [$(arg PM1_x), $(arg PM1_y), $(arg PM1_z)]
                  orientation: [1.57, 0, $(arg PM1_yaw)]
              PathMarker_2:
                mesh: package://robosub_descriptions/models/PathMarker/PathMarker.dae
                pose:
                  position: [$(arg PM2_x), $(arg PM2_y), $(arg PM2_z)]
                  orientation: [1.57, 0, $(arg PM2_yaw)] -->
              TRANSDEC:
                mesh: package://robosub_descriptions/models/transdec/TRANSDEC.dae
                pose:
                  position: [0, 0, 0]
                  orientation: [1.57, 0, 0]
        </rosparam>
  </node>
</launch>
