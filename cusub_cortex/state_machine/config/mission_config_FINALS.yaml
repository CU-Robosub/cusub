# Mission Config of the sub
# ALL UNITS IN M

# priors: [x,y,z, frame], if frame is omitted, the prior will default to leviathan/description/odom
# manager_info docs
# timeout_secs: # of seconds before timing out, if 0 the task won't timeout
# outcome_* : how the manager should respond when a task exits with this outcome
#            skip : move on to the next task
#            later : move this task to the end of the mission_tasks queue, essentially coming back to the task later
#            uh_oh : or any unrecognized string will crash and stop the SM

using_sim_params : True
manager_task_status_pub_rate: 1

startup_delay: 0

tasks:
 startup:
  manager_info:
    timeout_secs: 5
  depth: -1.5
  dive_time: 3

 start_gate:
  manager_info:
    timeout_secs: 0
    outcome_not_found: 'skip' # skip, later
    outcome_timed_out: 'uh_oh'
  prior: [14, 11.75, -0.5]
  dist_behind_gate: 1.0
  third_leg_adjustment: 0.5
  replan_thresh: 1.0
  style_dist: 2.0
  three_leg_depth: -0.2
  do_style: True
  spin_carrot_rads: 0.7

 jiangshi:
  manager_info:
    timeout_secs: 0
    outcome_not_found: 'skip'
    outcome_timed_out: 'skip'
  prior: [22.33, 15.28, -1.8]
  method: vs        # solvepnp OR vs
  solvepnp:
    use_buoys_yaw: False   # If false, the sub will assume the buoy is facing twd sub
    replan_thresh: 1.0
    slay_dist: 0.0
    approach_dist: 2.0
  visual_servo: # approach and slay
    goal_percentage_of_frame: 0.3    # Percentage of image for target class
    slay_timeout: 10                 # How long the slay will last
    slay_carrot: 0.7                 # controls the speed when slaying the buoy by adjusting drive setpoint
    target_pixel_threshold: 50    # how close to our target do we need to be    

 triangle:
  manager_info:
    timeout_secs: 0
    outcome_not_found: 'skip' # skip, later
    outcome_timed_out: 'skip'
  prior: [19.98, 17.64, -1.8]
  do_orbit: true
  orbit_right: true
  strafe_carrot: 0.2
  single_class_time: 1
  target_vampire: 'vampire_flying'
  visual_servo: # approach and slay
    goal_percentage_of_frame: 0.2    # Percentage of image for target class
    slay_timeout: 10                 # How long the slay will last
    slay_carrot: 0.7                 # controls the speed when slaying the buoy by adjusting drive setpoint
    target_pixel_threshold: 50    # how close to our target do we need to be    
  mikes_method:
    do: false
    go_over_jiangshi_depth: -0.7
    meters_fwd: 2.0

 dropper:
  manager_info:
    timeout_secs: 0
    outcome_not_found: 'skip' # skip, later
    outcome_timed_out: 'skip'
  prior: [27.03, 23.5, -1.25]
  target_pixel_threshold: 50   # Goal box size around our target pixel for visual servoing, if inside the box we will be successful
  approach_depth: -1
  drop_timeout: 90
  drive_carrot: 2.0
  depth_carrot: 0.5
  drop_depth: -2.5
  drop_depth_timeout: 60

 octagon:
  manager_info:
    timeout_secs: 0
    outcome_not_found: 'skip' # skip, later
    outcome_timed_out: 'skip'
  prior: [16.45, 44.65, -1.25]
  target_pixel_threshold: 50   # Goal box size around our target pixel for visual servoing, if inside the box we will be successful
  approach_depth: -1
  depth_carrot: 0.2
  drive_carrot: 2.0
  octagon_height: 0.0
  finish_depth: -1.5
  finish_depth_thresh: 0.4

 debug:
  manager_info:
    timeout_secs: 0
    outcome_not_found: 'skip' # skip, later
    outcome_timed_out: 'skip'
  centering_time: 5            # Time between first centered feedback & when we check if we're centered again
  target_pixel_threshold: 30   # Goal box size around our target pixel for visual servoing, if inside the box we will be successful
  drop_depth: -2.5

mission_tasks: # Tasks To Do In Order
  - startup
  - start_gate # maybe do visual servoing on the gate?
  - jiangshi
  - triangle
  - dropper
  - octagon
