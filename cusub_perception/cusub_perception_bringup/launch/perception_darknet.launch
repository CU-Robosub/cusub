<launch>
  <arg name="sub" default="leviathan" />

  <group ns="$(arg sub)">


    <!-- Configurations -->
    <rosparam command="load" file="$(find localizer)/config/localizer_config.yaml"/>
    <rosparam command="load" file="$(find darknet_multiplexer)/config/darknet_multiplexer.yaml"/>
    <!-- dynamic yolo params -->
    <arg name="debug_darknet"       default="0" />
    <arg name="use_tiny"            default="1"/>
    <arg name="detect_sleep_time"   default="0.0"/>
    <arg name="show_image"          default="false"/>
    <arg name="detection_threshold" default="0.5"/>
   
    <include ns="darknet_ros" file="$(find darknet_config)/launch/configure_darknet.launch">
      <arg name="use_tiny"            value="$(arg use_tiny)"/>
      <arg name="detect_sleep_time"   value="$(arg detect_sleep_time)" />
      <arg name="show_image"          value="$(arg show_image)" />
      <arg name="detection_threshold" value="$(arg detection_threshold)" />
    </include>

    <!-- Nodelets -->

    <!-- Camera Multiplexer -->
    <node pkg="nodelet" type="nodelet" name="darknet_multiplexer" args="load darknet_multiplexer/Multiplexer standalone_nodelet" output="screen"/>
    <!-- Get Darknet Classes Server -->
    <node pkg="nodelet" type="nodelet" name="darknet_get_classes" args="load darknet_multiplexer/GetClasses standalone_nodelet" output="screen"/>
    <!-- Darknet -->
    <node pkg="nodelet" type="nodelet" name="darknet_ros" args="load darknet_ros/YoloObjectDetector standalone_nodelet" output="screen">
        <remap from="darknet_ros/bounding_boxes"          to="cusub_perception/darknet_ros/bounding_boxes" />
        <remap from="/camera/rgb/image_raw"               to="cusub_perception/darknet_multiplexer/out"/>
    </node>
    <!-- Darknet Debug -->
    <node pkg="nodelet" type="nodelet" name="darknet_drawer" args="load darknet_multiplexer/DarknetDrawer standalone_nodelet" output="screen" if="$(arg debug_darknet)">
      <rosparam command="load" ns="class_names" file="$(find darknet_config)/yaml/class_names.txt"/>
    </node>


  </group>
</launch>
